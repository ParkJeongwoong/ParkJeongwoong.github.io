{"pageProps":{"markdown":"# Bean의 이름\r\n\r\n> Bean의 이름은 특별히 지정하지 않으면 \"camelCase\"가 된다.\r\n\r\n이번 글은 위의 사실만 알면 된다.\r\n\r\nBean 이름은 camelCase라는 것.\r\n\r\n\r\n\r\n## 배경\r\n\r\n스케쥴 작업 도충 배포로 작업이 미완료 될 경우 재처리하는 로직을 추가했다.\r\n\r\n어플리케이션이 다시 띄워지고 나서 스케쥴들을 하나씩 조회하며 (1) 실행 중 상태인지, (2) 실행 중이라면 실행하고 있는 어플리케이션 ID가 자기자신인지 확인하고 만약 맞다면 다시 실행하도록 했다.\r\n\r\n\r\n\r\n이 때, ApplicationContext와 Reflection을 사용해서 Bean 객체를 찾고 스케쥴 메서드를 실행시켰는데 Bean 객체를 찾을 수 없다는 에러가 떴다.\r\n\r\n\r\n\r\n## 과정\r\n\r\n@PostConstruct 가 다른 Bean의 생성은 보장할 수 없어서 문제가 생긴다고 생각하고 @EventListener(ContextRefreshedEvent.class)로 변경했는데 똑같이 Bean 객체를 찾을 수 없다는 에러가 떴다.\r\n\r\n\r\n\r\n그럼 지금 무슨 Bean들이 있는거지? 싶어 생성된 Bean들의 이름을 전부 출력해봤는데..\r\n\r\n이름들이 다 cammelCase로 들어가 있는 걸 확인했다.\r\n\r\n\r\n\r\n난 Class 이름이 PascalCase니 Bean도 같을 거라 생각하고 대문자로 시작하는 이름으로 Bean을 찾으려고 했었다.\r\n\r\n결국 찾으려는 bean이름을 camelCase로 수정하고 나서 해결했다.","documentTitle":"Bean의 이름","index":[{"type":"type1","data":" Bean의 이름"},{"type":"type2","data":" 배경"},{"type":"type2","data":" 과정"}]},"__N_SSG":true}