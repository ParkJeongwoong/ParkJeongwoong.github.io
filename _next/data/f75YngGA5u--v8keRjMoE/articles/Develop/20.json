{"pageProps":{"markdown_gitHub":"# [Spring Boot] 3.1.0 버전 업데이트\r\n\r\n최근 2.4.1 버전을 쓰던 Spring Boot를 3.1.0으로 업데이트했다.\r\n\r\n\r\n\r\n## 변경사항\r\n\r\n버전을 올리면서 다음과 같은 변경사항들이 생겼다.\r\n\r\n\r\n\r\n1. **javax** -> **jakarta** \r\n   - javax가 아니라 jakarta를 사용\r\n   - 관리 주체가 이클립스 재단으로 바뀌어서 그렇다고 한다\r\n\r\n2. **springfox** -> **springdoc**\r\n\r\n   - Swagger를 사용하기 위해 썼던 springfox를 대신 springdoc을 사용했다.\r\n   - springfox에는 jakarta를 지원하지 않기 때문\r\n\r\n3. **Spring Security 6**\r\n\r\n   - Spring Security 6을 사용하면서 SecurityConfig.java가 많이 바뀌었다.\r\n\r\n   - WebSecurityConfigurerAdapter 를 더이상 상속받지 않는 대신 Bean 객체를 이용해서 설정한다.\r\n\r\n     ```java\r\n     // 변경 전\r\n     @Override\r\n     protected void configure(AuthenticationManagerBuilder auth) {\r\n         auth.authenticationProvider(rememberMeAuthenticationProvider());\r\n         auth.authenticationProvider(new CustomAuthenticationProvider(REMEMBER_ME_KEY, customUserDetailsService));\r\n     }\r\n     \r\n     authenticationManager();\r\n     ```\r\n\r\n     ```java\r\n     // 변경 후\r\n     @Bean\r\n     public AuthenticationManager authenticationManager(HttpSecurity http) throws Exception {\r\n         AuthenticationManagerBuilder authenticationManagerBuilder = http.getSharedObject(AuthenticationManagerBuilder.class);\r\n         authenticationManagerBuilder.authenticationProvider(rememberMeAuthenticationProvider());\r\n         authenticationManagerBuilder.authenticationProvider(new CustomAuthenticationProvider(REMEMBER_ME_KEY, customUserDetailsService));\r\n         return authenticationManagerBuilder.build();\r\n     }\r\n     \r\n     authenticationManager(http);\r\n     ```\r\n\r\n   - HttpSecurity 관련 많은 메서드들이 deprecated 됐다. 기본적으로 and()를 사용하지 않고 lambda 형식으로 속성을 설정하는 것으로 바뀌었다.\r\n\r\n     ```java\r\n     // 변경 전\r\n     @Override\r\n     protected void configure(HttpSecurity http) throws Exception {\r\n         http.csrf().disable()\r\n             .cors().configurationSource(corsConfigurationSource())\r\n             .and()\r\n             .authorizeRequests()\r\n             .antMatchers(\"/admin/*\").authenticated()\r\n             .anyrequest().permitAll()\r\n             .and()\r\n             .exceptionHandling()\r\n             .accessDeniedHandler(webAccessDeniedHandler)\r\n             .authenticationEntryPoint(webAuthenticationEntryPoint)\r\n         ;\r\n     }\r\n     ```\r\n\r\n     ```java\r\n     // 변경 후\r\n     @Bean\r\n     public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\r\n         http.csrf(AbstractHttpConfigurer::disable)\r\n             .cors(httpSecurityCorsConfigurer -> httpSecurityCorsConfigurer.configurationSource(corsConfigurationSource()))\r\n             .authorizeHttpRequests(requests->requests\r\n                 .requestMatchers(\"/admin/*\").authenticated()\r\n                 .anyRequest().permitAll()\r\n             )\r\n             .exceptionHandling(exception->exception\r\n                 .accessDeniedHandler(webAccessDeniedHandler)\r\n                 .authenticationEntryPoint(webAuthenticationEntryPoint)\r\n             )\r\n         ;\r\n         return http.build();\r\n     }\r\n     ```\r\n\r\n4. 나의 경우는 Entity의 컬럼으로 사용하던 예약어들을 사용할 수 없었다.\r\n\r\n   - Holiday Entity에 있던 date, name, year, month, day를 사용할 수 없어서 컬럼명 앞에 \"holiday_\"를 추가했다.","documentTitle":"[Spring Boot] 3.1.0 버전 업데이트","articleCategory":"Develop","articleId":"20"},"__N_SSG":true}