{"pageProps":{"markdown":"# [숙박 서비스] 개선 내역\r\n\r\n그동안 운영 중인 숙박 서비스를 소소하게 개선했다.\r\n\r\n이 글에선 수정한 내역에 대한 간단한 소개와 그 과정에서 배운 것들을 정리하려고 한다.\r\n\r\n\r\n\r\n## DateRoom 엔티티 Index 생성\r\n\r\nDateRoom 엔티티를 조회할 때 \"날짜\"를 기준으로 조회하는 경우가 많아 Index를 생성했다.\r\n\r\n\r\n\r\n## 스케쥴 작업 관리\r\n\r\n스케쥴 작업 중 생길 수 있는 문제(다른 작업과 충돌, 어플리케이션 종료) 등에 대응할 수 있는 로직을 추가했다.\r\n\r\n\r\n\r\n### 스케쥴 작업 실행 중 어플리케이션이 종료가 된 경우\r\n\r\n스케쥴 작업 중 배포를 하면서 어플리케이션이 종료된 경우가 발생할 경우 작업이 완전히 끝나지 않은 채로 남아있게 된다.\r\n\r\n이 점을 해결하기 위해 어플리케이션 재기동 시 각 스케쥴의 상태를 검사하고 작업 중인 스케쥴을 재처리하는 로직을 추가했다.\r\n\r\n\r\n\r\n스케쥴을 실행할 때 캐시에 스케쥴명과 Profile을 Key-Value로 저장하고 작업이 종료되면 이를 해제하는데,\r\n\r\n재실행 된 이후 본인의 Profile이 남아있는 스케쥴이 있다면, 자신이 완료하지 못한 스케쥴이 남아있다는 뜻이므로 이를 재실행하도록 했다.\r\n\r\n\r\n\r\n### SingleJob 어노테이션 추가\r\n\r\n예약 현황 동기화 스케쥴은 주기적으로 실행되면서 Airbnb와 Booking 과 예약 현황을 동기화 시킨다.\r\n\r\n그런데 동기화는 고객이 예약할 때와 관리자의 수동 동기화를 누를 때도 진행된다.\r\n\r\n\r\n\r\n정기적인 Cron Job과 비정기적인 동기화가 동시 진행되면 문제가 생길 수 있으므로 SingleJob이라는 어노테이션을 만들고 스케쥴 작업과 충돌 가능성이 있는 메서드들에 어노테이션을 붙였다.\r\n\r\n그리고 AOP를 이용해서 이 어노테이션이 붙은 작업은 Redis의 분산락을 걸도록 만들었고 여러 서버들에서 중복으로 DB 작업이 진행되지 않도록 만들었다.\r\n\r\n\r\n\r\n## Retry, Recover\r\n\r\n외부와 연결되는 동기화 작업이나 Redis 호출 등의 메서드에 Retry와 Recover를 사용해서 응답에 문제가 있을 경우 재시도, 재시도 실패 시 알림을 보내도록 만들었다.\r\n\r\n\r\n\r\n## Redis 장애 대처 로직\r\n\r\n현재 Redis를 크게 3가지 용도로 사용한다.\r\n\r\n1. 자주 사용하는 데이터 캐싱\r\n2. 인증번호 임시 저장\r\n3. 스케쥴 작업의 분산락\r\n\r\n\r\n\r\nRedis에 문제가 생기는 경우, 이 3가지 작업에 모두 문제가 생기므로 다음과 같은 보완 로직을 추가했다.\r\n\r\n1. 데이터 캐싱\r\n   - Redis 장애 시 DB에서 대신 조회\r\n2. 인증번호 인증\r\n   - 인증번호 요청 : Redis 장애 시 특정 규칙에 따라 Token을 만들고 헤더에 쿠키 값으로 넣어 응답\r\n   - 인증번호 인증 : Redis 장애 시 쿠키의 Token값을 확인하고 인증 완료\r\n3. 스케쥴 작업\r\n   - 락을 잡을 수 없는 상황인 경우, 다른 서버의 Health Check 작업을 하고 실행되고 있는 서버 중 profile 번호가 가장 낮은 서버에 스케쥴 작업/SingleJob 작업을 위임\r\n\r\n\r\n\r\n## 결제 완료 시 Webhook, Callback 충돌 방지\r\n\r\n결제가 완료되면 클라이언트의 Callback과 Portone의 Webhook(클라이언트의 문제로 결제 완료 응답을 못 받을 경우를 대비)을 받게 된다.\r\n\r\n두 요청이 거의 동시에 오게 되다보니 충돌이 발생하는 경우가 종종 발생했다. (두 요청이 동시에 Payment 데이터를 생성해서 저장하는 경우)\r\n\r\n\r\n\r\n이를 해결하기 위해 두 작업 진행 시 분산락을 걸고, \r\n\r\nWebhook 작업이 먼저 진행되었으면 클라이언트의 Callback은 결제 성공으로 응답을 주고\r\n\r\nCallback을 먼저 받았으면 Webhook에 대한 작업은 무시하도록 수정했다.\r\n\r\n\r\n\r\n## Airbnb 동기화 중 오버부킹 대응 로직 추가\r\n\r\n여기에 대해서는 쓸 내용이 많으므로 다음 글에 이어쓸 예정이다.","documentTitle":"[숙박 서비스] 개선 내역","index":[{"type":"type1","data":" [숙박 서비스] 개선 내역"},{"type":"type2","data":" DateRoom 엔티티 Index 생성"},{"type":"type2","data":" 스케쥴 작업 관리"},{"type":"type3","data":" 스케쥴 작업 실행 중 어플리케이션이 종료가 된 경우"},{"type":"type3","data":" SingleJob 어노테이션 추가"},{"type":"type2","data":" Retry, Recover"},{"type":"type2","data":" Redis 장애 대처 로직"},{"type":"type2","data":" 결제 완료 시 Webhook, Callback 충돌 방지"},{"type":"type2","data":" Airbnb 동기화 중 오버부킹 대응 로직 추가"}]},"__N_SSG":true}