{"pageProps":{"markdown_gitHub":"# [GitHub Blog 개발기] sitemap, 게시글 등록 자동화 (Shell Script)\r\n\r\n지금까지 매번 글을 새로 작성할 때마다 다음과 같은 일을 해야 했었다.\r\n\r\n1. 작성한 글의 Meta data(제목, 파일 위치, 작성시간, ID)를 **Meta data를 관리하는 JS 파일**에 추가\r\n2. **sitemap.xml**에 해당 글의 url 추가\r\n3. **배포**\r\n\r\n처음에 계획했던 대로 위의 세 가지 프로세스를 자동화하고 싶었고 Shell Script를 이용해서 자동화를 구현했다.\r\n\r\n\r\n\r\n## 동작 순서\r\n\r\n1. Markdown이 있는 폴더와 안의 파일을 읽어 각 파일에 대한 Meta data를 얻고, <u>이를 바탕으로 Meta data 관리 JS 파일을 만든다.</u>\r\n\r\n2. JS 파일에 있는 정보를 바탕으로 <u>sitemap.xml 생성</u>\r\n3. 배포\r\n\r\n\r\n\r\n## Shell Script 코드 전문\r\n\r\n```bash\r\n# 자동화 스크립트\r\n\r\n# article_data 파일 읽기\r\nsearch_dir=./src/store/article_data\r\nfile_dir=store/article_data\r\n\r\n##### sitemap (1) - 파일 준비\r\necho \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\r\n<urlset xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns=\\\"http://www.sitemaps.org/schemas/sitemap/0.9\\\" xsi:schemaLocation=\\\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\\\">\r\n\r\n<!-- 메뉴 -->\r\n    <url>\r\n        <loc>https://parkjeongwoong.github.io/</loc>\r\n        <changefreq>monthly</changefreq>\r\n    </url>\r\n    <url>\r\n        <loc>https://parkjeongwoong.github.io/profile</loc>\r\n        <changefreq>monthly</changefreq>\r\n    </url>\r\n    <url>\r\n        <loc>https://parkjeongwoong.github.io/articles</loc>\r\n        <changefreq>daily</changefreq>\r\n    </url>\r\n    <url>\r\n        <loc>https://parkjeongwoong.github.io/archives</loc>\r\n        <changefreq>weekly</changefreq>\r\n    </url>\" > sitemap.xml\r\n##### sitemap (1) END #####\r\n\r\n\r\n##### 폴더 / 파일 구분\r\ndirectories=()\r\n\r\nfor entry in `ls $search_dir`; do\r\n  if [ -d $search_dir/$entry ]; then\r\n    directories+=($entry)\r\n  fi\r\ndone\r\n\r\necho Directories : ${directories[@]}\r\n\r\n\r\n\r\n############### [폴더] ###############\r\nfor dir in ${directories[@]}; do\r\n  echo [D : ${dir} 폴더 진입]\r\n  CATEGORY=\"${dir%%/*}\" # 윈도우에서 실행하는 경우 폴더명 끝에 /이 붙는 문제 해결\r\n  ARTICLE_ID=0\r\n\r\n##### js file (1) - Category 파일 생성\r\n  echo \"const ${CATEGORY} = [\" > $search_dir/${CATEGORY}.js\r\n##### js file (1) END #####\r\n\r\n  ##### 폴더의 파일 하나씩 추출 -> 날짜, 위치\r\n  for file in `ls $search_dir/$CATEGORY`; do\r\n    DATE=\"${file%%_*}\"\r\n\r\n    REL_ADDRESS=$search_dir/$CATEGORY/$file\r\n    FILE_ADDRESS=$file_dir/$CATEGORY/$file\r\n    \r\n    ##### 파일 읽기 -> 제목 추출\r\n    while read line; do\r\n\r\n      if [[ ${line:0:2} == \"# \" ]]; then\r\n        TITLE=\"${line#*# }\" # 각 파일의 첫 번째 H1을 제목으로 선택\r\n        TITLE=\"${TITLE::-1}\" # 개행문자 제거\r\n        break\r\n      fi\r\n\r\n    done < $REL_ADDRESS\r\n\r\n##### js file (2) - Article Data 추가\r\n    echo \"  {\r\n    category: \\\"${CATEGORY}\\\",\r\n    id: ${ARTICLE_ID},\r\n    title: \\\"${TITLE}\\\",\r\n    date: new Date(\\\"${DATE:0:4}-${DATE:4:2}-${DATE:6:2}\\\"),\r\n    content: \\\"${FILE_ADDRESS}\\\",\r\n  },\" >> $search_dir/${CATEGORY}.js\r\n  \r\n    ARTICLE_ID=`expr $ARTICLE_ID + 1`\r\n##### js file (2) END #####\r\n\r\n  done\r\n\r\n##### js file (3) - Category 파일 완료\r\n  echo \"];\r\n\r\nexport default ${CATEGORY};\r\n\" >> $search_dir/${CATEGORY}.js\r\n##### js file (3) END #####\r\n\r\n  echo -D : ${entry}.js 파일 생성-\r\ndone\r\n######################################\r\n\r\n\r\n\r\nfiles=()\r\n\r\nfor entry in `ls $search_dir`; do\r\n  if [ -f $search_dir/$entry ]; then\r\n    files+=($entry)\r\n  fi\r\ndone\r\n\r\necho Files : ${files[@]}\r\n\r\n\r\n\r\n############### [파일] ###############\r\nfor file in ${files[@]}; do\r\n  echo [F : ${file} 파일 진입]\r\n      \r\n##### sitemap (2) - 카테고리 준비\r\n  category=\"${file%%.*}\"\r\n  url_index=0\r\n  echo \"\r\n<!-- ${category} -->\" >> sitemap.xml\r\n##### sitemap (2) END #####\r\n      \r\n  while read line; do\r\n\r\n    # 파일 위치 확인\r\n    if [[ \"$line\" == *\"{\"* ]]; then\r\n\r\n##### sitemap (3) - URL 추가\r\n      echo \"    <url>\r\n        <loc>https://parkjeongwoong.github.io/articles/${category}/${url_index}</loc>\r\n        <changefreq>daily</changefreq>\r\n    </url>\" >> sitemap.xml\r\n\r\n      url_index=`expr $url_index + 1`\r\n##### sitemap (3) END #####\r\n\r\n    fi\r\n\r\n  done < $search_dir/$file\r\n\r\n  echo -F : sitemap에 ${file} 정보 추가-\r\ndone\r\n######################################\r\n\r\n\r\n##### sitemap (4) - sitemap 태그 닫기\r\necho \"\r\n</urlset>\" >> sitemap.xml\r\n##### sitemap (4) END #####\r\n\r\n\r\n############### [배포] ###############\r\nnpm run deploy\r\n######################################\r\n```\r\n\r\n\r\n\r\n## 쉘 스크립트 문법\r\n\r\n### Array\r\n\r\n- [ **변수명=()** ] 형태로 생성\r\n- [ **변수명+=(값)** ] 형태로 값 추가 가능\r\n\r\n- [ $변수명 ] 은 0번째 인덱스의 값만 불러옴\r\n  - 따라서 전체 값을 가져올 때는 반드시 [@]을 붙여서 써야 한다\r\n  - [ **${변수명[@]}** ]\r\n\r\n\r\n\r\n### 조건문\r\n\r\n```bash\r\nif [조건문]; then\r\n\t실행문\r\nfi\r\n```\r\n\r\n```bash\r\nif [조건문]; then\r\n\t실행문\r\n\t\r\nelif [조건문]; then\r\n\t실행문\r\n\t\r\nelse [조건문]; then\r\n\t실행문\r\nfi\r\n```\r\n\r\n\r\n\r\n### 반복문\r\n\r\n- for문\r\n\r\n```bash\r\nfor 변수 in 나열된 값; do\r\n\t실행문\r\ndone\r\n```\r\n\r\n- while문\r\n\r\n```bash\r\nwhile [조건문]; do\r\n\t실행문\r\ndone\r\n```\r\n\r\n\r\n\r\n### 문자열 추출\r\n\r\n- 기준값 뒤로 추출 : **GET_STRING_BACK=\"${STRING#*기준값}\"**\r\n- 기준값 앞으로 추출 : **GET_STRING_FRONT=\"${STRING%%기준값*}\"**\r\n- 인덱스 기준으로 자르기 : **${STRING:시작인덱스:개수}**\r\n\r\n\r\n\r\n### 파일 읽기\r\n\r\n- 한 줄씩 읽기\r\n\r\n```bash\r\nwhile read line; do\r\n\techo $line\r\ndone < 파일위치\r\n```\r\n\r\n- 전체 읽기\r\n\r\n  - cat 사용\r\n\r\n  ```bash\r\n  file=`cat 파일위치`\r\n  echo \"$file\"\r\n  ```\r\n\r\n  - $() 사용\r\n\r\n  ```bash\r\n  file=$(<파일위치)\r\n  echo \"$file\"\r\n  ```\r\n\r\n\r\n\r\n### 파일 저장\r\n\r\n- 파일 생성/덮어쓰기 (>)\r\n\r\n```bash\r\necho \"내용\" > 파일위치\r\n```\r\n\r\n- 기존 파일에 데이터 추가 (>>)\r\n\r\n```bash\r\necho \"내용\" >> 파일위치\r\n```\r\n\r\n\r\n\r\n### Tip\r\n\r\n- 변수에 값을 할당할 때 띄어쓰기를 하면 안 된다\r\n  - a = Hi (X)     /     **a=Hi (O)**\r\n- 변수는 기본적으로 문자열이기 때문에 계산을 하려면 **expr** 를 사용해야 한다.\r\n  - **result='expr $var + 1'**","documentTitle":"[GitHub Blog 개발기] sitemap, 게시글 등록 자동화 (Shell Script)","articleCategory":"Develop","articleId":"7"},"__N_SSG":true}